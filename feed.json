{
    "version": "https://jsonfeed.org/version/1",
    "title": "MòeVL",
    "home_page_url": "https://moevl.com/",
    "feed_url": "https://moevl.com/feed.json",
    "description": "Nhật ký học lập trình của một n00b",
    "icon": "https://moevl.com/apple-touch-icon.png",
    "favicon": "https://moevl.com/favicon.ico",
    "expired": false,
    
    "author": "{"userpicture"=>nil, "username"=>nil, "github"=>nil, "twitter"=>nil}",
    
"items": [
    
        {
            "id": "https://moevl.com/binary-base64",
            "title": "Sao binary là 0 với 1 mà chiếm 8 bit còn base64 để mã hóa chữ cái mà lại có 6 bit.",
            "summary": null,
            "content_text": "Câu hỏi này đặt ra khi mình không hiểu cụ thể mã hóa là làm cái gì.Today I LearntBinary và Base64 đều là hệ thống mã hóa. Ví dụ chữ Man thì có 3 chữ cái, nếu mã hóa, không cần biết là mã hóa theo hệ thống gì, thì ta tạm kết quả sẽ là 3 “kí tự đại diện”01001101 01100001 01101110Một “kí tự đại diện” của bên binary thì có 8 chữ số, mỗi chữ số thì hoặc là số 0, hoặc là số 1. Mỗi chữ số này chiếm 1 bit trong bộ nhớ. Vậy nên một “kí tự đại diện” sẽ ngốn 8 bit.Cũng vì chứa 8 chữ số, mà dãy gồm 8 chữ số đó có 2^8 = 256 biến thể khác nhau, chúng ta đem nó đi đại diện cho 256 kí tự khác nhau cần được mã hóa, còn kí tự đó là gì thì tùy, chữ cái, số má, whatever.Hội đồng lập ra cái mã nhị phân binary này nghĩ rằng 256 biến thể là thừa đủ cho cả bảng chữ cái tiếng Anh và cả số má 0-9 nữa. Nhưng hội đồng lập ra cái Base64 bảo thấy 256 vẫn còn hơi nhiều. Nên ông tính lại, thì bảng chữ cái Tiếng Anh, gồm cả hoa thường, rồi chữ số, rồi dấu má kí tự đặc biệt,… cộng lại chỉ cần 64 slot là quá đủ cho cuộc đời rồi. Nên ông quyết định chỉ dành ra 6 chữ số tức 6 bit cho mỗi kí tự, 2^6 = 64 slots.Chuyển từ binary qua base64 thì làm theo kiểu dồn như sauTừ chữ cái -&gt; chuyển sang số binary (theo bảng alphabet in binary) -&gt; phân chia lại theo từng cụm 6 chữ số -&gt; Convert ngược lại thành chữ cái (theo bảng base64 index table)Ví dụ chữ Man chuyển sang binary01001101 01100001 01101110Dồn lại010011010110000101101110Chia lại theo từng cụm 6 chữ số (nặng 6 bit)010011 010110 000101 101110Đối chiếu với bảng base64 thì được vừa khéo 4 kí tựT\tW\tF\tuCó cái hay là dù mỗi kí tự sau khi chuyển sang base64 chỉ chiếm 6 bit tức là nhỏ hơn binary là 8 bit, nhưng số lượng kí tự lại cần nhiều hơn. Đâm ra file size base64 vẫn lớn hơn.",
            "content_html": "<p>Câu hỏi này đặt ra khi mình không hiểu cụ thể mã hóa là làm cái gì.</p><p>Today I Learnt</p><p>Binary và Base64 đều là hệ thống mã hóa. Ví dụ chữ Man thì có 3 chữ cái, nếu mã hóa, không cần biết là mã hóa theo hệ thống gì, thì ta tạm kết quả sẽ là 3 “kí tự đại diện”</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>01001101 01100001 01101110</code></pre></div></div><p>Một “kí tự đại diện” của bên binary thì có 8 chữ số, mỗi chữ số thì hoặc là số 0, hoặc là số 1. Mỗi chữ số này chiếm 1 bit trong bộ nhớ. Vậy nên một “kí tự đại diện” sẽ ngốn 8 bit.</p><p>Cũng vì chứa 8 chữ số, mà dãy gồm 8 chữ số đó có 2^8 = 256 biến thể khác nhau, chúng ta đem nó đi đại diện cho 256 kí tự khác nhau cần được mã hóa, còn kí tự đó là gì thì tùy, chữ cái, số má, whatever.</p><p>Hội đồng lập ra cái mã nhị phân binary này nghĩ rằng 256 biến thể là thừa đủ cho cả bảng chữ cái tiếng Anh và cả số má 0-9 nữa. Nhưng hội đồng lập ra cái Base64 bảo thấy 256 vẫn còn hơi nhiều. Nên ông tính lại, thì bảng chữ cái Tiếng Anh, gồm cả hoa thường, rồi chữ số, rồi dấu má kí tự đặc biệt,… cộng lại chỉ cần 64 slot là quá đủ cho cuộc đời rồi. Nên ông quyết định chỉ dành ra 6 chữ số tức 6 bit cho mỗi kí tự, 2^6 = 64 slots.</p><p>Chuyển từ binary qua base64 thì làm theo kiểu dồn như sau</p><p>Từ chữ cái -&gt; chuyển sang số binary (theo bảng alphabet in binary) -&gt; phân chia lại theo từng cụm 6 chữ số -&gt; Convert ngược lại thành chữ cái (theo bảng base64 index table)</p><p>Ví dụ chữ Man chuyển sang binary</p><p><img src=\"https://i.ibb.co/4YJZZ9W/Screenshot-1.jpg\" alt=\"\" /></p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>01001101 01100001 01101110</code></pre></div></div><p>Dồn lại</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>010011010110000101101110</code></pre></div></div><p>Chia lại theo từng cụm 6 chữ số (nặng 6 bit)</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>010011 010110 000101 101110</code></pre></div></div><p>Đối chiếu với bảng base64 thì được vừa khéo 4 kí tự</p><p><img src=\"https://i.ibb.co/qyws0f3/Screenshot-3.jpg\" alt=\"\" /></p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>T\tW\tF\tu</code></pre></div></div><p>Có cái hay là dù mỗi kí tự sau khi chuyển sang base64 chỉ chiếm 6 bit tức là nhỏ hơn binary là 8 bit, nhưng số lượng kí tự lại cần nhiều hơn. Đâm ra file size base64 vẫn lớn hơn.</p>",
            "url": "https://moevl.com/binary-base64",
            
            
            
            "tags": ["other","data","til"],
            
            "date_published": "2022-02-14T00:00:00+01:00",
            "date_modified": "2022-02-14T00:00:00+01:00",
            
                "author": 
                "{"userpicture"=>nil, "username"=>nil, "github"=>nil, "twitter"=>nil}"
                
            
        },
    
        {
            "id": "https://moevl.com/toi-viet-blog",
            "title": "Tôi muốn viết blog như thế nào?",
            "summary": null,
            "content_text": "Tâm lý người đi search tutorialNếu là tutorial về công nghệ, thường thì người đọc đang trong tâm lý đau đầu rối rắm bởi mắc kẹt đâu đó, nóng lòng muốn xong vấn đề, đã lướt qua rất nhiều trang rồi và không mong mỏi gì hơn là blog hãy viết toẹt ra cách giải quyết 1 cách trực diện, dễ dàng nắm điểm mấu chốt, càng ngắn càng tốt, càng dễ nhìn càng tốt, để đập phát là được luôn, 1 phát ăn ngay không phải nghĩ nhiều, chạy được luôn, không lỗi lầm. Không phải dài dòng như đi dạm ngõ, quan viên hai họ mỗi bên đọc một bài diễn thuyết để mở đầu câu chuyện.Nếu là bài viết về lý thuyết tổng quan, hạn chế quăng code vì sẽ lỗi thời sớm, và cũng không tốt lắm khiến người đọc copy lười biếng, nên tăng cường nêu khái niệm, biểu đồ, giải thích, mô tả.Tập trung vào khái niệm hay bước làm?Những gì cần phải hiểu thì tập trung vào khái niệm và cách giải quyết vấn đề. Những gì mà mọi người hầu như chỉ cần đạt kết quả để tập trung làm việc khác, thì tập trung vào show code và cách làm. Không tạo tutorial những thứ mọi người nên học để tự làm. Không hướng dẫn những cái quá dễ tự suy ra được.Hài hướcKhông được thiếu đi yếu tố hài hước. Phong cách không cần nghiêm trang đĩnh đạc nhàm chán, vì vậy thì khác gì đọc document đâu. Với lại mục đích của mình là lan tỏa niềm vui và cảm hứng chứ không phải chỉ lan tỏa công nghệ, khích lệ tinh thần cho bản thân và đồng đội đôi khi quan trọng hơn là chỉ ra lý thuyết gì đó.Dễ hiểu và mộc mạcBản thân mình cũng cùi nên nhiều khi đọc tut khó mình chả hiểu gì. Ngược lại khi sờ vào được một bài vừa dễ hiểu vừa thẳng thắn, cách hành văn giản dị như một số bro trên Kipalog mình thấy vô cùng cảm kích.Không đả kíchTung hoành trên cõi mạng bấy lâu mình thấy rất dễ vô tình gây hấn. Nên để tạo không khí hòa bình chung mình sẽ cố gắng tránh đả kích hay xúc phạm ai trên blog này.TILCó những thứ mình từng tưởng là đúng nhưng lại hóa ra sai, việc đưa kiến thức sai quả là nguy hiểm, ảnh hưởng rất xấu đến thói quen lập trình của nhiều người vô tội. Vì thế nên viết về những thứ bản thân mình đã làm thạo và fix lỗi liên quan ít nhất vài lần. Khi viết về những cái mình mới tìm hiểu ở thời điểm viết thì gắn thẻ TodayILearnt như kiểu xe tập lái gắn biển để mọi người xung quanh đi cẩn thận.",
            "content_html": "<h2 id=\"tâm-lý-người-đi-search-tutorial\">Tâm lý người đi search tutorial</h2><p>Nếu là tutorial về công nghệ, thường thì người đọc đang trong tâm lý đau đầu rối rắm bởi mắc kẹt đâu đó, nóng lòng muốn xong vấn đề, đã lướt qua rất nhiều trang rồi và không mong mỏi gì hơn là blog hãy viết toẹt ra cách giải quyết 1 cách trực diện, dễ dàng nắm điểm mấu chốt, càng ngắn càng tốt, càng dễ nhìn càng tốt, để đập phát là được luôn, 1 phát ăn ngay không phải nghĩ nhiều, chạy được luôn, không lỗi lầm. Không phải dài dòng như đi dạm ngõ, quan viên hai họ mỗi bên đọc một bài diễn thuyết để mở đầu câu chuyện.</p><p>Nếu là bài viết về lý thuyết tổng quan, hạn chế quăng code vì sẽ lỗi thời sớm, và cũng không tốt lắm khiến người đọc copy lười biếng, nên tăng cường nêu khái niệm, biểu đồ, giải thích, mô tả.</p><h2 id=\"tập-trung-vào-khái-niệm-hay-bước-làm\">Tập trung vào khái niệm hay bước làm?</h2><p>Những gì cần phải hiểu thì tập trung vào khái niệm và cách giải quyết vấn đề. Những gì mà mọi người hầu như chỉ cần đạt kết quả để tập trung làm việc khác, thì tập trung vào show code và cách làm. Không tạo tutorial những thứ mọi người nên học để tự làm. Không hướng dẫn những cái quá dễ tự suy ra được.</p><h2 id=\"hài-hước\">Hài hước</h2><p>Không được thiếu đi yếu tố hài hước. Phong cách không cần nghiêm trang đĩnh đạc nhàm chán, vì vậy thì khác gì đọc document đâu. Với lại mục đích của mình là lan tỏa niềm vui và cảm hứng chứ không phải chỉ lan tỏa công nghệ, khích lệ tinh thần cho bản thân và đồng đội đôi khi quan trọng hơn là chỉ ra lý thuyết gì đó.</p><h2 id=\"dễ-hiểu-và-mộc-mạc\">Dễ hiểu và mộc mạc</h2><p>Bản thân mình cũng cùi nên nhiều khi đọc tut khó mình chả hiểu gì. Ngược lại khi sờ vào được một bài vừa dễ hiểu vừa thẳng thắn, cách hành văn giản dị như một số bro trên Kipalog mình thấy vô cùng cảm kích.</p><h2 id=\"không-đả-kích\">Không đả kích</h2><p>Tung hoành trên cõi mạng bấy lâu mình thấy rất dễ vô tình gây hấn. Nên để tạo không khí hòa bình chung mình sẽ cố gắng tránh đả kích hay xúc phạm ai trên blog này.</p><h2 id=\"til\">TIL</h2><p>Có những thứ mình từng tưởng là đúng nhưng lại hóa ra sai, việc đưa kiến thức sai quả là nguy hiểm, ảnh hưởng rất xấu đến thói quen lập trình của nhiều người vô tội. Vì thế nên viết về những thứ bản thân mình đã làm thạo và fix lỗi liên quan ít nhất vài lần. Khi viết về những cái mình mới tìm hiểu ở thời điểm viết thì gắn thẻ TodayILearnt như kiểu xe tập lái gắn biển để mọi người xung quanh đi cẩn thận.</p>",
            "url": "https://moevl.com/toi-viet-blog",
            
            
            
            
            
            "date_published": "2022-02-13T00:00:00+01:00",
            "date_modified": "2022-02-13T00:00:00+01:00",
            
                "author": 
                "{"userpicture"=>nil, "username"=>nil, "github"=>nil, "twitter"=>nil}"
                
            
        }
    
    ]
}